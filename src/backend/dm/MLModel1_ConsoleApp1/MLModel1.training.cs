﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel1_ConsoleApp1
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"sex", @"sex"),new InputOutputColumnPair(@"gpa", @"gpa"),new InputOutputColumnPair(@"physics", @"physics"),new InputOutputColumnPair(@"math", @"math"),new InputOutputColumnPair(@"art", @"art"),new InputOutputColumnPair(@"analytic", @"analytic"),new InputOutputColumnPair(@"construct", @"construct"),new InputOutputColumnPair(@"electric", @"electric"),new InputOutputColumnPair(@"mechanic", @"mechanic")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"sex",@"gpa",@"physics",@"math",@"art",@"analytic",@"construct",@"electric",@"mechanic"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"specialty",inputColumnName:@"specialty"))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.07516605F,L2Regularization=14.4184F,LabelColumnName=@"specialty",FeatureColumnName=@"Features"}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
